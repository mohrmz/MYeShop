@model MYShop.Web.UI.Models.HomeViewModel
@{
    ViewData["Title"] = "فروشگاه اینترنتی جور کده حراج محصولات|تخفیف ویژه";
    ViewData["ShorDescription"] = "فروشگاه اینترنتی جور کده فروش بهترین محصولات و برند ها با قیمت مناسب و ارسال رایگان در سرتاسر کشور همراه با گارانتی اصل شرکتی";
    ViewData["KeyWords"] = "جور کده،فروشگاه اینترنتی جورکده،فروش تشک،تشک رویا،تشک،خرید تشک،خرید تشک رویا،خرید محصول";

    ViewData["url"] = Context.Request.Host + Context.Request.GetEncodedPathAndQuery();
    ViewData["image"] = "https://joorkadeh.com/images/joor.jpg";
}
<div class="clear"></div>
<section id="product">
    <div class="container-fluid">
        <div class="row">

            <div class="col-md-11 content">
                <h1 class="subject">فروشگاه اینترنتی جورکده</h1>
                <div class="features_items">
                    @foreach (var item in Model.Result.Items)
                    {
                        var base64 = Convert.ToBase64String(@item.Image);
                        var imgSrc = String.Format("data:image/jpg;base64,{0}", base64);

                        <div class="product-image-wrapper">
                            <div class="single-products">
                                <div class="productinfo">
                                    <a asp-action="Product" asp-controller="Home" asp-route-productId="@item.ProductID" title="@item.Name">

                                        <div>
                                            <span class="pbrand del">برند : @item.Brand.Name</span>
                                            @if (item.discount > 0)
                                            {
                                                <span class="c-product-box__discount-badge">@item.discount%</span>
                                            }
                                        </div>







                                        <img src="@imgSrc" class="img img-responsive" width="210" height="130" alt="@item.Name" title="@item.Name" />
                                        <h3 class="black">@item.Name</h3>
                                        <div>
                                            @if (@item.newvalue > 0)
                                            {<del class="font-y del">@item.Price.ToString("#,###")</del>

                                            <h3 class="font-y orange-o">

                                                @item.newvalue.ToString("#,###") <span>ریال</span>
                                            </h3>}
                                        else if (@item.Price > 0)
                                        {
                                            <h3 class="font-y orange-o">

                                                @item.Price.ToString("#,###") <span>ریال</span>
                                            </h3>
                                        }

                                        </div>



                                    </a>

                                    @if (Model.Category != 0)
                                    {
                                        <div class="choose">
                                            <ul>

                                                <li><a asp-action="Compare" asp-controller="Home" asp-route-ProductID="@item.ProductID" title="@item.Name"><i class="fa fa-plus-square"></i>مقایسه</a></li>
                                            </ul>

                                        </div>
                                    }
                                </div>

                            </div>
                        </div>


                    }



                </div>
                <nav page-model="@Model.Result.pagingData" page-action="index" page-contoller="home" page-category="@Model.Category" rel="nofollow"></nav>




            </div>
        </div>

    </div>
</section>



@{



    foreach (var cat in ViewBag.bb)
    {


        @await Component.InvokeAsync("Product", new { category = cat, type = 1 })
    }
    Category category = new Category();
    @await Component.InvokeAsync("Product", new { category, type = 2 })

    @await Component.InvokeAsync("Product", new { category, type = 3 })

    @await Component.InvokeAsync("Brand")
}


